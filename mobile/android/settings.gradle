rootProject.name = 'Quicksell'

def expoPackageJson = ["node", "--print", "require.resolve('expo/package.json')"].execute(null, rootDir).text.trim()
if (expoPackageJson) {
  apply from: new File(expoPackageJson, "../scripts/autolinking.gradle");
  useExpoModules()
}

def cliPlatformAndroidPackageJson = ["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()
if (cliPlatformAndroidPackageJson) {
  apply from: new File(cliPlatformAndroidPackageJson, "../native_modules.gradle");
  applyNativeModulesSettingsGradle(settings)
}

include ':app'

def gradlePluginPackageJson = ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"].execute(null, rootDir).text.trim()
if (gradlePluginPackageJson && gradlePluginPackageJson != '/') {
  includeBuild(new File(gradlePluginPackageJson).getParentFile())
}
